#include "DxLib.h"
#include "Map.h"
#include "../DrawFunctions.h"



Map::Map():
	map_(),
	mappos_()
{
	groundH_ = my::MyLoadGraph(L"Data/maptip/jimen1.png");
	startmappos_.x = -(32 * 32 * 2);
	startmappos_.y = -(16 * 32 * 2);

	SetMapData();

}

Map::~Map()
{
	DeleteGraph(groundH_);
}

void Map::Init()
{
}

void Map::End()
{
}

void Map::Update(Vec2 playerpos)
{
	mappos_.x = playerpos.x;
	mappos_.y = playerpos.y;
}

void Map::Draw()
{
	for (int y = 0; y < map_numY; y++) {
		for (int x = 0; x < map_numX; x++) {
			for (int i = 0; i < map_[y][x].height; i++) {
				for (int j = 0; j < map_[y][x].width; j++) {
					if (map_[y][x].data[i][j] == 1) {
						DrawGraph(startmappos_.x - mappos_.x + (32 * j) + (32 * 32 * x), 
							startmappos_.y - mappos_.y + (32 * i) + (32 * 16 * y), groundH_, true);
					}
				}
			}
		}
	}

}

void Map::SetMapData()
{
	for (int i = 0; i < map_numY; i++) {
		for (int j = 0; j < map_numX; j++) {
			map_[i][j] = {
				16,
				32,
				{
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
					{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				}
			};
		}
	}
}
